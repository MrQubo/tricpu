111111110000001101  # [Identifier(val='MOV'), Register(val=-2), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='MOV'), Register(val=-2), Comma(), Number(val=0)]
000000000100000000  # [Identifier(val='SVC'), Number(val=0)]
111111110000010000  # [Identifier(val='CMP'), Register(val=1), Comma(), Minus(), Number(val=2)]
000000000000000111  # [Identifier(val='CMP'), Register(val=1), Comma(), Minus(), Number(val=2)]
111111000001000000  # [Identifier(val='JZ'), Identifier(val='notify_croak')]
000000000111110100  # [Identifier(val='JZ'), Identifier(val='notify_croak')]
111111110000010000  # [Identifier(val='CMP'), Register(val=1), Comma(), Minus(), Number(val=1)]
000000000000000001  # [Identifier(val='CMP'), Register(val=1), Comma(), Minus(), Number(val=1)]
111111000001000000  # [Identifier(val='JZ'), Identifier(val='notify_attack')]
000000000001001101  # [Identifier(val='JZ'), Identifier(val='notify_attack')]
111111110000010000  # [Identifier(val='CMP'), Register(val=1), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='CMP'), Register(val=1), Comma(), Number(val=0)]
111111000001000000  # [Identifier(val='JZ'), Identifier(val='pick_action')]
000000000101110001  # [Identifier(val='JZ'), Identifier(val='pick_action')]
111111110000010000  # [Identifier(val='CMP'), Register(val=1), Comma(), Number(val=1)]
000000000000000011  # [Identifier(val='CMP'), Register(val=1), Comma(), Number(val=1)]
111111000001000000  # [Identifier(val='JZ'), Identifier(val='notify_square')]
000000000100110000  # [Identifier(val='JZ'), Identifier(val='notify_square')]
111111110000010000  # [Identifier(val='CMP'), Register(val=1), Comma(), Number(val=2)]
000000000000001101  # [Identifier(val='CMP'), Register(val=1), Comma(), Number(val=2)]
111111000001000000  # [Identifier(val='JZ'), Identifier(val='notify_give')]
000000000111000101  # [Identifier(val='JZ'), Identifier(val='notify_give')]
111111000000000000  # [Identifier(val='J'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='J'), Identifier(val='loop')]
011100001101000000  # [Identifier(val='CMP'), Register(val=3), Comma(), Register(val=-1)]
111111000011000000  # [Identifier(val='JNZ'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='JNZ'), Identifier(val='loop')]
011100110101110000  # [Identifier(val='CMP'), Register(val=2), Comma(), Register(val=-2)]
111111000001000000  # [Identifier(val='JZ'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='JZ'), Identifier(val='loop')]
010100000001111101  # [Identifier(val='MOV'), Register(val=-2), Comma(), Register(val=2)]
010100000001110001  # [Identifier(val='MOV'), Register(val=1), Comma(), Register(val=2)]
000000000100000111  # [Identifier(val='SVC'), Number(val=2)]
111111111100010111  # [Identifier(val='AND'), Register(val=2), Comma(), Register(val=1), Comma(), Bits(val='00000++++')]
000000000001010101  # [Identifier(val='AND'), Register(val=2), Comma(), Register(val=1), Comma(), Bits(val='00000++++')]
111111000100000111  # [Identifier(val='ST'), Register(val=2), Comma(), LBracket(), Identifier(val='en_x'), RBracket()]
000000010011110101  # [Identifier(val='ST'), Register(val=2), Comma(), LBracket(), Identifier(val='en_x'), RBracket()]
010000111100010111  # [Identifier(val='SHR'), Register(val=2), Comma(), Register(val=1), Comma(), Number(val=4)]
111111000100000111  # [Identifier(val='ST'), Register(val=2), Comma(), LBracket(), Identifier(val='en_y'), RBracket()]
000000010011001111  # [Identifier(val='ST'), Register(val=2), Comma(), LBracket(), Identifier(val='en_y'), RBracket()]
111111110000000001  # [Identifier(val='MOV'), Register(val=1), Comma(), String(val='"ROAR!"')]
000000011101010100  # [Identifier(val='MOV'), Register(val=1), Comma(), String(val='"ROAR!"')]
111111110000000111  # [Identifier(val='MOV'), Register(val=2), Comma(), Number(val=1)]
000000000000000001  # [Identifier(val='MOV'), Register(val=2), Comma(), Number(val=1)]
000000000100000001  # [Identifier(val='SVC'), Number(val=1)]
111111000000000000  # [Identifier(val='J'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='J'), Identifier(val='loop')]
011100001101000000  # [Identifier(val='CMP'), Register(val=3), Comma(), Register(val=-1)]
111111000001000000  # [Identifier(val='JZ'), Identifier(val='croak_self')]
000000000111010111  # [Identifier(val='JZ'), Identifier(val='croak_self')]
011100110101000000  # [Identifier(val='CMP'), Register(val=3), Comma(), Register(val=-2)]
111111000011000000  # [Identifier(val='JNZ'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='JNZ'), Identifier(val='loop')]
111111110000001101  # [Identifier(val='MOV'), Register(val=-2), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='MOV'), Register(val=-2), Comma(), Number(val=0)]
111111000000000000  # [Identifier(val='J'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='J'), Identifier(val='loop')]
111111110000000001  # [Identifier(val='MOV'), Register(val=1), Comma(), String(val='"Grar?"')]
000000011101000101  # [Identifier(val='MOV'), Register(val=1), Comma(), String(val='"Grar?"')]
111111110000000111  # [Identifier(val='MOV'), Register(val=2), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='MOV'), Register(val=2), Comma(), Number(val=0)]
000000000100000001  # [Identifier(val='SVC'), Number(val=1)]
111111000000000000  # [Identifier(val='J'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='J'), Identifier(val='loop')]
111111110000000001  # [Identifier(val='MOV'), Register(val=1), Comma(), String(val='"AAARGH!"')]
000000011101110100  # [Identifier(val='MOV'), Register(val=1), Comma(), String(val='"AAARGH!"')]
111111110000000111  # [Identifier(val='MOV'), Register(val=2), Comma(), Number(val=3)]
000000000000000100  # [Identifier(val='MOV'), Register(val=2), Comma(), Number(val=3)]
000000000100000001  # [Identifier(val='SVC'), Number(val=1)]
111111000000000000  # [Identifier(val='J'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='J'), Identifier(val='loop')]
111111110001000000  # [Identifier(val='CMP'), Register(val=3), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='CMP'), Register(val=3), Comma(), Number(val=0)]
111111000011010000  # [Identifier(val='JLE'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='JLE'), Identifier(val='loop')]
011100110101010000  # [Identifier(val='CMP'), Register(val=4), Comma(), Register(val=-2)]
111111000001000000  # [Identifier(val='JZ'), Identifier(val='track_enemy')]
000000000100010001  # [Identifier(val='JZ'), Identifier(val='track_enemy')]
011100001101010000  # [Identifier(val='CMP'), Register(val=4), Comma(), Register(val=-1)]
111111000011000000  # [Identifier(val='JNZ'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='JNZ'), Identifier(val='loop')]
111111111101110001  # [Identifier(val='AND'), Register(val=1), Comma(), Register(val=2), Comma(), Bits(val='00000++++')]
000000000001010101  # [Identifier(val='AND'), Register(val=1), Comma(), Register(val=2), Comma(), Bits(val='00000++++')]
111111000100000001  # [Identifier(val='ST'), Register(val=1), Comma(), LBracket(), Identifier(val='my_x'), RBracket()]
000000010011110111  # [Identifier(val='ST'), Register(val=1), Comma(), LBracket(), Identifier(val='my_x'), RBracket()]
010000111101110111  # [Identifier(val='SHR'), Register(val=2), Comma(), Number(val=4)]
111111000100000111  # [Identifier(val='ST'), Register(val=2), Comma(), LBracket(), Identifier(val='my_y'), RBracket()]
000000010011110100  # [Identifier(val='ST'), Register(val=2), Comma(), LBracket(), Identifier(val='my_y'), RBracket()]
111111000000000000  # [Identifier(val='J'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='J'), Identifier(val='loop')]
111111111101110001  # [Identifier(val='AND'), Register(val=1), Comma(), Register(val=2), Comma(), Bits(val='00000++++')]
000000000001010101  # [Identifier(val='AND'), Register(val=1), Comma(), Register(val=2), Comma(), Bits(val='00000++++')]
111111000100000001  # [Identifier(val='ST'), Register(val=1), Comma(), LBracket(), Identifier(val='en_x'), RBracket()]
000000010011110101  # [Identifier(val='ST'), Register(val=1), Comma(), LBracket(), Identifier(val='en_x'), RBracket()]
010000111101110111  # [Identifier(val='SHR'), Register(val=2), Comma(), Number(val=4)]
111111000100000111  # [Identifier(val='ST'), Register(val=2), Comma(), LBracket(), Identifier(val='en_y'), RBracket()]
000000010011001111  # [Identifier(val='ST'), Register(val=2), Comma(), LBracket(), Identifier(val='en_y'), RBracket()]
111111000000000000  # [Identifier(val='J'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='J'), Identifier(val='loop')]
111111110011010000  # [Identifier(val='CMP'), Register(val=-2), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='CMP'), Register(val=-2), Comma(), Number(val=0)]
111111000001000000  # [Identifier(val='JZ'), Identifier(val='pick_action_idle')]
000000011111000100  # [Identifier(val='JZ'), Identifier(val='pick_action_idle')]
111111110000000101  # [Identifier(val='MOV'), Register(val=4), Comma(), Number(val=1)]
000000000000000001  # [Identifier(val='MOV'), Register(val=4), Comma(), Number(val=1)]
111111001100000001  # [Identifier(val='LD'), Register(val=1), Comma(), LBracket(), Identifier(val='en_x'), RBracket()]
000000010011110101  # [Identifier(val='LD'), Register(val=1), Comma(), LBracket(), Identifier(val='en_x'), RBracket()]
111111001100000111  # [Identifier(val='LD'), Register(val=2), Comma(), LBracket(), Identifier(val='my_x'), RBracket()]
000000010011110111  # [Identifier(val='LD'), Register(val=2), Comma(), LBracket(), Identifier(val='my_x'), RBracket()]
011100011100010000  # [Identifier(val='CMP'), Register(val=1), Comma(), Register(val=2)]
000000001111111111  # [Identifier(val='GETF'), Register(val=-4), Comma(), Flag(val='--')]
111111001100000001  # [Identifier(val='LD'), Register(val=1), Comma(), LBracket(), Identifier(val='en_y'), RBracket()]
000000010011001111  # [Identifier(val='LD'), Register(val=1), Comma(), LBracket(), Identifier(val='en_y'), RBracket()]
111111001100000111  # [Identifier(val='LD'), Register(val=2), Comma(), LBracket(), Identifier(val='my_y'), RBracket()]
000000010011110100  # [Identifier(val='LD'), Register(val=2), Comma(), LBracket(), Identifier(val='my_y'), RBracket()]
011100011100010000  # [Identifier(val='CMP'), Register(val=1), Comma(), Register(val=2)]
000000001111111100  # [Identifier(val='GETF'), Register(val=-3), Comma(), Flag(val='--')]
111111001100000001  # [Identifier(val='LD'), Register(val=1), Comma(), LBracket(), Identifier(val='my_x'), RBracket()]
000000010011110111  # [Identifier(val='LD'), Register(val=1), Comma(), LBracket(), Identifier(val='my_x'), RBracket()]
010100111100010001  # [Identifier(val='ADD'), Register(val=1), Comma(), Register(val=-4)]
111111001100000111  # [Identifier(val='LD'), Register(val=2), Comma(), LBracket(), Identifier(val='en_x'), RBracket()]
000000010011110101  # [Identifier(val='LD'), Register(val=2), Comma(), LBracket(), Identifier(val='en_x'), RBracket()]
011100011100010000  # [Identifier(val='CMP'), Register(val=1), Comma(), Register(val=2)]
111111000011000000  # [Identifier(val='JNZ'), Identifier(val='pick_action_move')]
000000011111010111  # [Identifier(val='JNZ'), Identifier(val='pick_action_move')]
111111001100000001  # [Identifier(val='LD'), Register(val=1), Comma(), LBracket(), Identifier(val='my_y'), RBracket()]
000000010011110100  # [Identifier(val='LD'), Register(val=1), Comma(), LBracket(), Identifier(val='my_y'), RBracket()]
010100110000010001  # [Identifier(val='ADD'), Register(val=1), Comma(), Register(val=-3)]
111111001100000111  # [Identifier(val='LD'), Register(val=2), Comma(), LBracket(), Identifier(val='en_y'), RBracket()]
000000010011001111  # [Identifier(val='LD'), Register(val=2), Comma(), LBracket(), Identifier(val='en_y'), RBracket()]
011100011100010000  # [Identifier(val='CMP'), Register(val=1), Comma(), Register(val=2)]
111111000011000000  # [Identifier(val='JNZ'), Identifier(val='pick_action_move')]
000000011111010111  # [Identifier(val='JNZ'), Identifier(val='pick_action_move')]
111111110000000001  # [Identifier(val='MOV'), Register(val=1), Comma(), Number(val=1)]
000000000000000001  # [Identifier(val='MOV'), Register(val=1), Comma(), Number(val=1)]
111111000000000000  # [Identifier(val='J'), Identifier(val='pick_action_dir')]
000000011100011101  # [Identifier(val='J'), Identifier(val='pick_action_dir')]
000000000011011111  # [Identifier(val='RNG'), Register(val=-4)]
000000000011011100  # [Identifier(val='RNG'), Register(val=-3)]
111111111111111111  # [Identifier(val='AND'), Register(val=-4), Comma(), Number(val=1)]
000000000000000001  # [Identifier(val='AND'), Register(val=-4), Comma(), Number(val=1)]
111111111111001100  # [Identifier(val='AND'), Register(val=-3), Comma(), Number(val=1)]
000000000000000001  # [Identifier(val='AND'), Register(val=-3), Comma(), Number(val=1)]
111111110000000101  # [Identifier(val='MOV'), Register(val=4), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='MOV'), Register(val=4), Comma(), Number(val=0)]
111111001100000001  # [Identifier(val='LD'), Register(val=1), Comma(), LBracket(), Identifier(val='my_x'), RBracket()]
000000010011110111  # [Identifier(val='LD'), Register(val=1), Comma(), LBracket(), Identifier(val='my_x'), RBracket()]
010100111100010001  # [Identifier(val='ADD'), Register(val=1), Comma(), Register(val=-4)]
111111111100010000  # [Identifier(val='AND'), Register(val=0), Comma(), Register(val=1), Comma(), Bits(val='+++++0000')]
010101010100000000  # [Identifier(val='AND'), Register(val=0), Comma(), Register(val=1), Comma(), Bits(val='+++++0000')]
111111000011000000  # [Identifier(val='JNZ'), Identifier(val='pick_action_null')]
000000011100010111  # [Identifier(val='JNZ'), Identifier(val='pick_action_null')]
111111001100000111  # [Identifier(val='LD'), Register(val=2), Comma(), LBracket(), Identifier(val='my_y'), RBracket()]
000000010011110100  # [Identifier(val='LD'), Register(val=2), Comma(), LBracket(), Identifier(val='my_y'), RBracket()]
010100110001110111  # [Identifier(val='ADD'), Register(val=2), Comma(), Register(val=-3)]
111111111101110000  # [Identifier(val='AND'), Register(val=0), Comma(), Register(val=2), Comma(), Bits(val='++++++000')]
010101010101000000  # [Identifier(val='AND'), Register(val=0), Comma(), Register(val=2), Comma(), Bits(val='++++++000')]
111111000011000000  # [Identifier(val='JNZ'), Identifier(val='pick_action_null')]
000000011100010111  # [Identifier(val='JNZ'), Identifier(val='pick_action_null')]
010000010101110111  # [Identifier(val='SHL'), Register(val=2), Comma(), Number(val=4)]
111101011100010001  # [Identifier(val='XOR'), Register(val=1), Comma(), Register(val=2)]
000000000100000011  # [Identifier(val='SVC'), Minus(), Number(val=1)]
111111110000010000  # [Identifier(val='CMP'), Register(val=1), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='CMP'), Register(val=1), Comma(), Number(val=0)]
111111000001010000  # [Identifier(val='JG'), Identifier(val='pick_action_null')]
000000011100010111  # [Identifier(val='JG'), Identifier(val='pick_action_null')]
111111110000000001  # [Identifier(val='MOV'), Register(val=1), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='MOV'), Register(val=1), Comma(), Number(val=0)]
010000000111000111  # [Identifier(val='SHL'), Register(val=2), Comma(), Register(val=-3), Comma(), Number(val=1)]
111101111101110111  # [Identifier(val='XOR'), Register(val=2), Comma(), Register(val=-4)]
111111000000000000  # [Identifier(val='J'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='J'), Identifier(val='loop')]
111111110001010000  # [Identifier(val='CMP'), Register(val=4), Comma(), Number(val=1)]
000000000000000011  # [Identifier(val='CMP'), Register(val=4), Comma(), Number(val=1)]
111111000001000000  # [Identifier(val='JZ'), Identifier(val='pick_action_idle')]
000000011111000100  # [Identifier(val='JZ'), Identifier(val='pick_action_idle')]
111111110000000001  # [Identifier(val='MOV'), Register(val=1), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='MOV'), Register(val=1), Comma(), Number(val=0)]
111111110000000111  # [Identifier(val='MOV'), Register(val=2), Comma(), Number(val=0)]
000000000000000000  # [Identifier(val='MOV'), Register(val=2), Comma(), Number(val=0)]
111111000000000000  # [Identifier(val='J'), Identifier(val='loop')]
000000000000000111  # [Identifier(val='J'), Identifier(val='loop')]
000000000001011101  # [Identifier(val='STRINGPOOL')]
000000000111010111  # [Identifier(val='STRINGPOOL')]
000000000111010111  # [Identifier(val='STRINGPOOL')]
000000000111010111  # [Identifier(val='STRINGPOOL')]
000000000100000001  # [Identifier(val='STRINGPOOL')]
000000000100110011  # [Identifier(val='STRINGPOOL')]
000000000100110000  # [Identifier(val='STRINGPOOL')]
000000000001011100  # [Identifier(val='STRINGPOOL')]
000000000001011101  # [Identifier(val='STRINGPOOL')]
000000000000000000  # [Identifier(val='STRINGPOOL')]
000000000001011101  # [Identifier(val='STRINGPOOL')]
000000000100110011  # [Identifier(val='STRINGPOOL')]
000000000101011100  # [Identifier(val='STRINGPOOL')]
000000000101111101  # [Identifier(val='STRINGPOOL')]
000000000101011100  # [Identifier(val='STRINGPOOL')]
000000000111010000  # [Identifier(val='STRINGPOOL')]
000000000001011101  # [Identifier(val='STRINGPOOL')]
000000000000000000  # [Identifier(val='STRINGPOOL')]
000000000001011101  # [Identifier(val='STRINGPOOL')]
000000000100000001  # [Identifier(val='STRINGPOOL')]
000000000100001101  # [Identifier(val='STRINGPOOL')]
000000000111010111  # [Identifier(val='STRINGPOOL')]
000000000100000001  # [Identifier(val='STRINGPOOL')]
000000000001011100  # [Identifier(val='STRINGPOOL')]
000000000001011101  # [Identifier(val='STRINGPOOL')]
000000000000000000  # [Identifier(val='STRINGPOOL')]
000000000000000000  # [Identifier(val='BYTE'), Number(val=0)]
000000000000000000  # [Identifier(val='BYTE'), Number(val=0)]
000000000000000000  # [Identifier(val='BYTE'), Number(val=0)]
000000000000000000  # [Identifier(val='BYTE'), Number(val=0)]
